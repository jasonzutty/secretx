% \iffalse meta-comment
%
% Copyright (c) 2019 by Keith F. Prussing <kprussing74@gmail.com>
%
% This work may be distributed and/or modified under the conditions of
% the LaTeX Project Public License, either version 1.3c of this license
% or (at your option) any later version.  The latest version of this
% license is in
%
%     http://www.latex-project.org/lppl.txt
%
% and version 1.3c or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Keith F. Prussing.
%
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{\jobname.dtx}
%</driver>
%<common>\NeedsTeXFormat{LaTeX2e}[2003/12/01]
%<style>\ProvidesPackage{secretx}
%<common>[2019/04/11 v0.5 Classification marking macros]
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{secretx}
\EnableCrossrefs{}
\CodelineIndex{}
\RecordChanges{}
\usepackage{blindtext}
\usepackage[style=ieee]{biblatex}
\usepackage{cleveref}
\makeatletter
\lhead{Document --- \thesecretx@doclevel}
\rhead{Page --- \thesecretx@pagelevel}
\makeatother
\rfoot{\thepage}
% Redefine headers and markings to avoid unnecessary alarm.
\addmarking{1}{(1)}{Trivial}
\addmarking{5}{(5)}{Sensitive}
\addmarking{10}{(10)}{Important}
\addmarking{25}{(25)}{Very Important}
\begin{document}
    \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits     \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \changes{v0.5}{2019/04/24}{Initial version}
% \GetFileInfo{\jobname.dtx}
%
%^^A%^^A Package macros
% \DoNotIndex{\begin, \end, \newenvironment, \newcommand, \renewcommand}
% \DoNotIndex{\csdef, \csuse, \ifcsdef, \if, \else, \fi, \everypar}
% \DoNotIndex{\iftoggle, \ifnum, \toggletrue, \togglefalse}
% \DoNotIndex{\newcounter, \newtoggle, \setcounter, \stepcounter}
% \DoNotIndex{\PackageError, \RequirePackage}
%^^A Other package macros
% \DoNotIndex{\AtBeginShipout}
% \DoNotIndex{\lhead, \chead, \rhead, \lfoot, \cfoot, \rfoot, \fancyhf}
% \DoNotIndex{\headerrulewidth, \pagestyle, \thispagestyle}
% \DoNotIndex{\zref, \zref@extract}
%^^A Package specific to ignore
% \DoNotIndex{\thesecretx@doclevel, \thesecretx@pagelevel}
% \DoNotIndex{\thesecretx@markcount}
%
% \title{
%   Classification Marking Macros for \LaTeX{} \thanks{This document
%   corresponds to \textsf{\jobname}~\fileversion, % dated~\filedate.}
% }
%
% \author{Keith F. Prussing \\ \texttt{kprussing74@gmail.com}}
%
% \maketitle
% \thispagestyle{fancy}
%
% \begin{abstract}
% \UCL{%^^A
% This package provides a set of \LaTeX{} macros for marking paragraphs
% in a document with a leading string and modifying the header and the
% footer of each page.  This is the spiritual successor to
% \textsf{secret.sty} but add the feature of marking the header and the
% footer correctly.
% }
% \end{abstract}
%
% \section{Introduction}
%
% \UCL{%^^A
% A core component of reporting sensitive information is properly
% marking sections of a document with appropriate labels.
% }
%
% \section{Usage}
%
% \UCL{%^^A
% To install the package, simply run the provided |secretx.ins| file
% through your preferred \LaTeX{} engind.  Then, copy the resultant
% |.sty| file to a location where \LaTeX{} can find them.  To generate
% the documentation, run this file (|secretx.dtx|) through \LaTeX{}
% twice.  The second time is only to make sure the references and index
% are typeset correctly.
% }
%
% \UCL{%^^A
% The better way to build the files is to simply use \textsf{SCons} with
% the provided |SConstruct|.
% }
%
% \section{Example Usage}
%
% \UCL{%^^A
% The markings in the following section are for demonstration purposes
% only.  All of the material is unclassified.
% }
%
% \UCL{\blindtext[1]}\par
% \UCL{\blindtext[1]}\par
% \UCL{\blindtext[1]}\par
% \CNF{\blindtext[1]}\par
% \UCL{\blindtext[1]}\par
% \UCL{\blindtext[1]}\par
% \TS{\blindtext[1]}\par
% \SEC{\blindtext[1]}\par
% \UCL{\blindtext[1]}\par
% \UCL{\blindtext[1]}\par
% \UCL{\blindtext[1]}\par
% \SEC{\blindtext[1]}\par
% \UCL{\blindtext[1]}\par
% \UCL{\blindtext[1]}\par
% \SEC{\blindtext[1]}\par %^^A This paragraph straddles a page break.
% \begin{unclassified}
% \Blindtext[6]
% \end{unclassified}
%
% \StopEventually{
% \printbibliography[]
% \PrintChanges{}
% \begin{unclassified}
% \PrintIndex{}
% \end{unclassified}
% }
%
% \section{Implementation}
%
% \UCL{%
% The basic logic is to define markings with increasing levels of
% sensitivity.  We track these along with paired line markings and page
% markings in internal arrays.
% }
%
% \iffalse
%<*style>
% \fi
%
% \UCL{%
% First, we need to initialize the headings.  We only set the center
% header and the footer, and we do this once based on the current page
% level.  We leave it to the user to decide on the rest of the header
% and footer except we remove the header line.%
% }
%    \begin{macrocode}
\RequirePackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}
\chead{\getheading{\thesecretx@pagelevel}}
\cfoot{\getheading{\thesecretx@pagelevel}}
\renewcommand{\headrulewidth}{0pt}
%    \end{macrocode}
%
% \subsection{Low level macros}
%
% \UCL{%
% These are the low level marcos for working establishing the markings.
% We expose them as use level macros incase someone wants to define
% custom markings or add markings that have not been previously defined.
% }
%
% \begin{macro}{\setmarking}
% \UCL{%
% Set a marking level by defining the level and a line marking (e.g. (U)
% for unclassified, (S) for secret, etc.).  This will overwrite a
% previously defined marking at the same level.  Note: it is up to the
% user to ensure the marking matches the heading at the same level set
% using |setheading|.
% }
%    \begin{macrocode}
\RequirePackage{etoolbox}
\newcommand{\setmarking}[2]{\csdef{secretx@marking#1}{#2}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\getmarking}
% \UCL{%
% Get a line marking from the marking storage.
% }
%    \begin{macrocode}
\newcommand{\getmarking}[1]{%
    \ifcsdef{secretx@marking#1}{%
        \csuse{secretx@marking#1}
    }{%
        \PackageError{secretx}{Undefined marking level}{%
            Marking #1 level was not previously defined.  Is it a typo
            or did you simply forget to define it?%
        }
    }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setheading}
% \UCL{%
% Set the heading level by defining the level and the heading (e.g.
% UNCLASSIFIED, SECRET, etc.).  This will overwrite a previously defined
% marking at the given level.  Note: it is up to the user to ensure the
% heading matches the marking at the same level set using |setmarking|.
% }
%    \begin{macrocode}
\newcommand{\setheading}[2]{\csdef{secretx@heading#1}{#2}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\getheading}
% \UCL{%
% Set the heading on the page, but reset it on a new page.
% }
%    \begin{macrocode}
\newcommand{\getheading}[1]{%
    \ifcsdef{secretx@heading#1}{%
        \csuse{secretx@heading#1}%
    }{%
        \PackageError{secretx}{Undefined heading level}{%
            Marking #1 level was not previously defined.  Is it a typo
            or did you simply forget to define it?%
        }
    }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\addmarking}
% \UCL{%
% A helper macro to set a marking's level, section marking, and header
% marking.%
% }
%    \begin{macrocode}
\newcommand{\addmarking}[3]{%
    \setmarking{#1}{#2}%
    \setheading{#1}{#3}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{secretx@pagelevel}
% \UCL{%
% A counter to store the marking level of the highest current page.%
% }
%    \begin{macrocode}
\newcounter{secretx@pagelevel}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{secretx@doclevel}
% \UCL{%
% A counter to store the highest marking level of the current document.%
% }
%    \begin{macrocode}
\newcounter{secretx@doclevel}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{secretx@markcount}
% \UCL{%
% A counter for the classification environment.
% }
%    \begin{macrocode}
\newcounter{secretx@markcount}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{secretx@inenv}
% \UCL{%
% A toggle flagging we are within a classification environment.  We
% cannot nest classifications because that does not make sense.
% Therefore, we punt and force the user to \emph{not} nest
% classification levels.
% }
%    \begin{macrocode}
\newtoggle{secretx@inenv}
\togglefalse{secretx@inenv}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\secretx@updatelevel}
% \UCL{%
% A macro to update the page and document levels.%
% }
%    \begin{macrocode}
\newcommand{\secretx@updatelevel}[1]{%
    \ifnum#1 > \thesecretx@pagelevel%
        \setcounter{secretx@pagelevel}{#1}%
    \fi%
    \ifnum#1 > \thesecretx@doclevel%
        \setcounter{secretx@doclevel}{#1}%
    \fi%
}
%    \end{macrocode}
% \end{macro}
%
% \UCL{%
% Check if the environment spans a page break.  If the environment does,
% reset the page level after the next page.  We need to do this at the
% end of every page.%
% }
%    \begin{macrocode}
\RequirePackage{atbegshi}
\RequirePackage{zref-user}
\RequirePackage{zref-abspage}
\AtBeginShipout{%
    \ifnum\zref@extract{secretx@mark-begin-\thesecretx@markcount}{abspage}
            =\zref@extract{secretx@mark-end-\thesecretx@markcount}{abspage}
    \else%
        \setcounter{secretx@pagelevel}{\thesecretx@pagelevel}%
    \fi%
}
%    \end{macrocode}
%
% \begin{macro}{markenv}
% \UCL{%
% The workhorse environment to actually set the headings and paragraph
% markings.  Further, this environment checks if the final paragraph
% spans a page break and resets the heading level accordingly if it
% does.
% }
%    \begin{macrocode}
\newenvironment{markenv}[1]{%
%    \end{macrocode}
% \UCL{%
% First, make sure the user did not try to nest classification levels.%
% }
%    \begin{macrocode}
    \iftoggle{secretx@inenv}{%
        \PackageError{secretx}{Nested classifications}{%
            You cannot nest classification environments%
        }
    }{%
        \toggletrue{secretx@inenv}%
    }
%    \end{macrocode}
% \UCL{%
% Now step the environemt counter to track the current environment.%
% }
%    \begin{macrocode}
    \stepcounter{secretx@markcount}%
    \zlabel{secretx@mark-begin-\thesecretx@markcount}%
%    \end{macrocode}
% \UCL{%
% Mark each paragraph with the appropriate marking.%
% }
%    \begin{macrocode}
    \everypar{\getmarking{#1}}%
%    \end{macrocode}
% \UCL{%
% Now, we adjust the page and document levels if and only if level of
% the current environment is higher than the page or document level.%
% }
%    \begin{macrocode}
    \secretx@updatelevel{#1}%
}{%
%    \end{macrocode}
% \UCL{%
% Now we need to determine if the last paragraph spanned a page break.
% We do this by figuring out if the begining of the environment was on
% the same page as the end.  We need to mark the current page before we
% can check.%
% }
%    \begin{macrocode}
    \zlabel{secretx@mark-end-\thesecretx@markcount}%
%    \end{macrocode}
% \UCL{%
% And finally flag that we are not in the environment.%
% }
%    \begin{macrocode}
    \togglefalse{secretx@inenv}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\markinline}
% \UCL{%
% A macro for marking a single item.  This does not enforce the no
% nested markings like the environment.  It is up to the user to make
% sure any nested environments do not interfere with this marking.%
% }
%    \begin{macrocode}
\newcommand{\markinline}[2]{
    \stepcounter{secretx@markcount}%
    \zlabel{secretx@mark-begin-\thesecretx@markcount}%
    \getmarking{#1}
    \secretx@updatelevel{#1}%
    #2
    \zlabel{secretx@mark-end-\thesecretx@markcount}%
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Specific Markings}
%
% \UCL{%
% Now we define specific markings for the known classification levels.
% For each, we define an environment and a macro.%
% }
%
% \begin{macro}{empty}
% \UCL{%
% An empty default marking.%
% }
%    \begin{macrocode}
\addmarking{0}{}{}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{unclassified}
% \UCL{%
% Unclassified markings.%
% }
%    \begin{macrocode}
\addmarking{1}{(U)}{Unclassified}
\newenvironment{unclassified}[0]{%
    \begin{markenv}{1}
}{%
    \end{markenv}
}
\newcommand{\UCL}[1]{\markinline{1}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{FOUO}
% \UCL{%
% For official use only markings.%
% }
%    \begin{macrocode}
\addmarking{2}{(U//FOUO)}{Unclassified//For Official Use Only}
\newenvironment{forofficialuseonly}{%
    \begin{markenv}{2}
}{%
    \end{markenv}
}
\newcommand{\FOUO}[1]{\markinline{2}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{confidential}
% \UCL{%
% Confidential markings.%
% }
%    \begin{macrocode}
\addmarking{5}{(C)}{Confidential}
\newenvironment{confidential}{%
    \begin{markenv}{5}
}{%
    \end{markenv}
}
\newcommand{\CNF}[1]{\markinline{5}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{secret}
% \UCL{%
% Secret markings.
% }
%    \begin{macrocode}
\addmarking{10}{(S)}{Secret}
\newenvironment{secret}{%
    \begin{markenv}{10}
}{%
    \end{markenv}
}
\newcommand{\SEC}[1]{\markinline{10}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{secretnoforn}
% \UCL{%
% Secret no forn markings.
% }
%    \begin{macrocode}
\addmarking{15}{(S//NF)}{Secret//No Forn}
\newenvironment{secretnoforn}{%
    \begin{markenv}{15}
}{%
    \end{markenv}
}
\newcommand{\SNF}[1]{\markinline{15}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\topsecret}
% \UCL{%
% Top secret markings.%
% }
%    \begin{macrocode}
\addmarking{25}{(TS)}{Top Secret}
\newenvironment{topsecret}{%
    \begin{markenv}{25}
}{%
    \end{markenv}
}
\newcommand{\TS}[1]{\markinline{25}{#1}}
%    \end{macrocode}
% \end{macro}
%
% \iffalse
%</style>
% \fi
% \Finale{}
\endinput
